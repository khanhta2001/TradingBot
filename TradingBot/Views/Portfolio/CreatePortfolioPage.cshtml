@{
    Layout = "_Layout";
}
@model TradingBotModels.Models.Account

@if (string.IsNullOrEmpty(Model.ConnectionAuth.ConsumerKey) || Model.ConnectionAuth.ConsumerKey == "None")
{
    <div class="container mt-4">
        <h3>Setup Required</h3>
        <p>
            It seems you haven't set up your Consumer Key yet. 
            Please click the link below to configure your settings.
        </p>
        <a href="@Url.Action("UserAccount", "User", new { userName = User.Identity.Name})" class="btn btn-primary">Set up Consumer Key</a>
    </div>
}
else
{
    <div class="container mt-4">
        <form asp-controller="Portfolio" asp-action="CreatePortfolio" method="Post">
            <!-- Portfolio Name -->
            <div class="form-group">
                <label for="PortfolioName">Portfolio Name:</label>
                <input id="PortfolioName" type="text" class="form-control" placeholder="Name your Portfolio" name="PortfolioName" />
            </div>

            <!-- Stock Search -->
            <div class="form-group">
                <label for="searchResultsInput">Search for a stock:</label>
                <input id="searchResultsInput" type="text" class="form-control" placeholder="Search for a stock" />
            </div>

            <!-- Search Results Table -->
            <div id="searchResults" class="mb-3">
                <table id="searchResultsTable" class="table table-bordered table-striped d-none">
                    <thead>
                        <tr>
                            <th>Stock Symbol</th>
                            <th>Product Name</th>
                            <th>Buy Price</th>
                            <th>Sell Price</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- Rows will be populated by JavaScript -->
                    </tbody>
                </table>
            </div>

            <!-- Submit Button -->
            <button type="submit" class="btn btn-success">Submit</button>
        </form>
    </div>
}

<script>
    $(document).ready(function () {
        $("#searchResultsInput").on('keyup', function(e) {
            if (e.keyCode === 13) {
                searchStocks($(this).val());
            }
        });
    });

    function searchStocks(query) {
        $.ajax({
            url: '@Url.Action("SearchProducts", "Trading")',
            type: 'GET',
            data: { searchWord: query },
            success: function(data) {
                populateTable(data);
            },
            error: function(error) {
                console.error("Error occurred:", error);
            }
        });
    }

    function populateTable(stocks) {
        const tableBody = $("#searchResultsTable tbody");
        tableBody.empty(); 

        stocks.forEach(stock => {
            const row = `
                <tr>
                    <td>${stock.Symbol}</td>
                    <td>${stock.ProductName}</td>
                    <td>${stock.BuyPrice}</td>
                    <td>${stock.SellPrice}</td>
                    <td><button class="btn btn-primary addToPortfolio">Add</button></td>
                </tr>
            `;

            tableBody.append(row);
        });

        if ($("#searchResultsTable").hasClass('d-none')) {
            $("#searchResultsTable").removeClass('d-none');
        }

        $(".addToPortfolio").click(function() {
            const row = $(this).closest('tr');
            $(this).text("Added").attr("disabled", true);
        });
    }
</script>
